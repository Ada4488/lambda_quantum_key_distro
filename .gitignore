# Task management file - keep out of version control
task.md

# Video recording guides and scripts - internal development files
VIDEO_SCRIPT.md
EASY_RECORDING_GUIDE.md
COMPLETE_RECORDING_GUIDE.md
VIDEO_SLIDES.md
HACKATHON_SUBMISSION.md
demo_commands.sh
show_localstack.sh

# Project-specific sensitive files
quantum-kd-simulator/.env.local
quantum-kd-simulator/terraform/terraform.tfvars
quantum-kd-simulator/docker-compose.localstack.yml

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.env.local
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Terraform
*.tfstate
*.tfstate.*
*.tfvars
*.tfvars.local
.terraform/
.terraform.lock.hcl
terraform.tfplan
tfplan
terraform.tfstate.backup
.terraform.tfstate.lock.info

# AWS
.aws/
aws-exports.js
amplify-meta.json
amplify/backend/awscloudformation/
amplify/backend/amplify-meta.json

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Logs
*.log
logs/

# Temporary files
tmp/
temp/
.tmp/

# Build artifacts
dist/
build/
*.zip

# Test reports
test-report.md
bandit-report.json
safety-report.json
api_response.json
response.json
e2e_test.py
coverage.json
.coverage.*

# LocalStack data
localstack-data/
docker-compose.localstack.yml
.localstack/

# Node modules (for frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# React build
/build
/public/hot
/public/storage
/storage/*.key
/vendor

# Environment files
.env.local
.env.development.local
.env.test.local
.env.production.local
.env.staging
.env.prod

# Secrets and credentials
secrets/
credentials/
*.pem
*.key
*.crt
*.p12
*.pfx

# Lambda deployment packages
*.zip
lambda-deployment-*.zip
layer-*.zip

# Docker
docker-compose.override.yml
.dockerignore

# Jupyter notebooks
*.ipynb_checkpoints/

# macOS
.AppleDouble
.LSOverride

# Windows
desktop.ini
$RECYCLE.BIN/

# Linux
*~
